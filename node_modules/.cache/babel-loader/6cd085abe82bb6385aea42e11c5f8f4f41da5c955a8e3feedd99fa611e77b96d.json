{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anuan\\\\OneDrive\\\\Desktop\\\\app 2\\\\app 2\\\\frontend\\\\src\\\\pages\\\\Notifications.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Heart, UserPlus, MessageCircle } from 'lucide-react';\nimport { Button } from '../components/ui/button';\nimport { useAuth } from '../components/AuthGuard';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notifications = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [unreadCount, setUnreadCount] = useState(0);\n  useEffect(() => {\n    if (user !== null && user !== void 0 && user._id) {\n      fetchNotifications();\n    }\n  }, [user === null || user === void 0 ? void 0 : user._id]);\n  const fetchNotifications = async () => {\n    try {\n      setLoading(true);\n      // Fetch notifications and unread count together\n      const [notifRes, countRes] = await Promise.all([axios.get(`/api/notifications/${user._id}`), axios.get(`/api/notifications/${user._id}/unread-count`)]);\n      setNotifications(notifRes.data);\n      setUnreadCount(countRes.data.count);\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const markAsRead = async notificationId => {\n    try {\n      await axios.put(`/api/notifications/${notificationId}/read`);\n      setNotifications(prev => prev.map(n => n._id === notificationId ? {\n        ...n,\n        read: true\n      } : n));\n      setUnreadCount(prev => Math.max(0, prev - 1));\n      window.dispatchEvent(new CustomEvent('refreshNotifications'));\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n    }\n  };\n  const markAllAsRead = async () => {\n    try {\n      await axios.put(`/api/notifications/user/${user._id}/read-all`);\n      setNotifications(prev => prev.map(n => ({\n        ...n,\n        read: true\n      })));\n      setUnreadCount(0);\n      window.dispatchEvent(new CustomEvent('refreshNotifications'));\n    } catch (error) {\n      console.error('Error marking all notifications as read:', error);\n    }\n  };\n  const getNotificationIcon = type => {\n    switch (type) {\n      case 'like':\n        return /*#__PURE__*/_jsxDEV(Heart, {\n          className: \"h-5 w-5 text-red-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 27\n        }, this);\n      case 'follow':\n        return /*#__PURE__*/_jsxDEV(UserPlus, {\n          className: \"h-5 w-5 text-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this);\n      case 'comment':\n        return /*#__PURE__*/_jsxDEV(MessageCircle, {\n          className: \"h-5 w-5 text-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 30\n        }, this);\n      case 'message':\n        return /*#__PURE__*/_jsxDEV(MessageCircle, {\n          className: \"h-5 w-5 text-purple-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 30\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Heart, {\n          className: \"h-5 w-5 text-gray-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 23\n        }, this);\n    }\n  };\n  const getNotificationText = ({\n    from,\n    type\n  }) => {\n    const username = (from === null || from === void 0 ? void 0 : from.username) || 'Someone';\n    switch (type) {\n      case 'like':\n        return `${username} liked your post`;\n      case 'follow':\n        return `${username} started following you`;\n      case 'comment':\n        return `${username} commented on your post`;\n      case 'message':\n        return `${username} sent you a message`;\n      default:\n        return 'New notification';\n    }\n  };\n  const handleNotificationClick = async notification => {\n    var _notification$post;\n    if (!notification.read) await markAsRead(notification._id);\n    if (notification.type === 'follow') {\n      var _notification$from;\n      navigate(`/profile/${(_notification$from = notification.from) === null || _notification$from === void 0 ? void 0 : _notification$from.username}`);\n    } else if (notification.type === 'message') {\n      var _notification$from2, _notification$from3;\n      navigate(`/messages?user=${(_notification$from2 = notification.from) === null || _notification$from2 === void 0 ? void 0 : _notification$from2._id}&username=${(_notification$from3 = notification.from) === null || _notification$from3 === void 0 ? void 0 : _notification$from3.username}`);\n    } else if ((_notification$post = notification.post) !== null && _notification$post !== void 0 && _notification$post._id) {\n      navigate(`/post/${notification.post._id}`);\n    }\n  };\n  const formatTimeAgo = date => {\n    const now = new Date();\n    const notifDate = new Date(date);\n    const diff = Math.floor((now - notifDate) / 1000);\n    if (diff < 60) return 'Just now';\n    if (diff < 3600) return `${Math.floor(diff / 60)}m ago`;\n    if (diff < 86400) return `${Math.floor(diff / 3600)}h ago`;\n    if (diff < 2592000) return `${Math.floor(diff / 86400)}d ago`;\n    return `${Math.floor(diff / 2592000)}mo ago`;\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto p-4 flex justify-center py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n  if (!notifications.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto p-4 text-center py-12\",\n    children: [/*#__PURE__*/_jsxDEV(Heart, {\n      className: \"h-16 w-16 text-gray-300 dark:text-gray-600 mx-auto mb-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold text-gray-900 dark:text-white mb-2\",\n      children: \"No notifications yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600 dark:text-gray-400\",\n      children: \"When someone likes your post or follows you, you'll see it here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold text-gray-900 dark:text-white\",\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline\",\n        size: \"sm\",\n        onClick: markAllAsRead,\n        children: \"Mark all as read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: notifications.map(notification => {\n        var _notification$from4, _notification$from5, _notification$from6;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex items-start space-x-3 p-4 rounded-lg cursor-pointer transition-colors border-l-4 ${notification.read ? 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 border-l-transparent' : 'bg-blue-50 dark:bg-blue-900/20 hover:bg-blue-100 dark:hover:bg-blue-900/30 border-l-blue-500'}`,\n          onClick: () => handleNotificationClick(notification),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-shrink-0 mt-1\",\n            children: getNotificationIcon(notification.type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-shrink-0\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-10 h-10 rounded-full overflow-hidden\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: (_notification$from4 = notification.from) !== null && _notification$from4 !== void 0 && _notification$from4.avatar ? `http://localhost:5001/${notification.from.avatar}` : `https://ui-avatars.com/api/?name=${((_notification$from5 = notification.from) === null || _notification$from5 === void 0 ? void 0 : _notification$from5.username) || 'User'}&background=random`,\n                alt: ((_notification$from6 = notification.from) === null || _notification$from6 === void 0 ? void 0 : _notification$from6.username) || 'User',\n                className: \"w-full h-full object-cover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 min-w-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-900 dark:text-white\",\n                children: getNotificationText(notification)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), !notification.read && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-2 h-2 bg-blue-500 rounded-full flex-shrink-0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 40\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-xs text-gray-500 dark:text-gray-400 mt-1\",\n              children: formatTimeAgo(notification.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), notification.post && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-shrink-0\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-12 h-12 rounded-lg overflow-hidden\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: notification.post.photo ? `http://localhost:5001/${notification.post.photo}` : 'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=600&h=600&fit=crop',\n                alt: \"Post\",\n                className: \"w-full h-full object-cover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, notification._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(Notifications, \"ykHFpZgkCvcz7goNF9DDlg6w+pQ=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useState","useEffect","Heart","UserPlus","MessageCircle","Button","useAuth","useNavigate","axios","jsxDEV","_jsxDEV","Notifications","_s","user","navigate","notifications","setNotifications","loading","setLoading","unreadCount","setUnreadCount","_id","fetchNotifications","notifRes","countRes","Promise","all","get","data","count","error","console","markAsRead","notificationId","put","prev","map","n","read","Math","max","window","dispatchEvent","CustomEvent","markAllAsRead","getNotificationIcon","type","className","fileName","_jsxFileName","lineNumber","columnNumber","getNotificationText","from","username","handleNotificationClick","notification","_notification$post","_notification$from","_notification$from2","_notification$from3","post","formatTimeAgo","date","now","Date","notifDate","diff","floor","children","length","variant","size","onClick","_notification$from4","_notification$from5","_notification$from6","src","avatar","alt","createdAt","photo","_c","$RefreshReg$"],"sources":["C:/Users/anuan/OneDrive/Desktop/app 2/app 2/frontend/src/pages/Notifications.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Heart, UserPlus, MessageCircle } from 'lucide-react';\nimport { Button } from '../components/ui/button';\nimport { useAuth } from '../components/AuthGuard';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Notifications = () => {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [notifications, setNotifications] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [unreadCount, setUnreadCount] = useState(0);\n\n  useEffect(() => {\n    if (user?._id) {\n      fetchNotifications();\n    }\n  }, [user?._id]);\n\n  const fetchNotifications = async () => {\n    try {\n      setLoading(true);\n      // Fetch notifications and unread count together\n      const [notifRes, countRes] = await Promise.all([\n        axios.get(`/api/notifications/${user._id}`),\n        axios.get(`/api/notifications/${user._id}/unread-count`)\n      ]);\n      setNotifications(notifRes.data);\n      setUnreadCount(countRes.data.count);\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const markAsRead = async (notificationId) => {\n    try {\n      await axios.put(`/api/notifications/${notificationId}/read`);\n      setNotifications(prev =>\n        prev.map(n => n._id === notificationId ? { ...n, read: true } : n)\n      );\n      setUnreadCount(prev => Math.max(0, prev - 1));\n      window.dispatchEvent(new CustomEvent('refreshNotifications'));\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n    }\n  };\n\n  const markAllAsRead = async () => {\n    try {\n      await axios.put(`/api/notifications/user/${user._id}/read-all`);\n      setNotifications(prev => prev.map(n => ({ ...n, read: true })));\n      setUnreadCount(0);\n      window.dispatchEvent(new CustomEvent('refreshNotifications'));\n    } catch (error) {\n      console.error('Error marking all notifications as read:', error);\n    }\n  };\n\n  const getNotificationIcon = (type) => {\n    switch (type) {\n      case 'like': return <Heart className=\"h-5 w-5 text-red-500\" />;\n      case 'follow': return <UserPlus className=\"h-5 w-5 text-blue-500\" />;\n      case 'comment': return <MessageCircle className=\"h-5 w-5 text-green-500\" />;\n      case 'message': return <MessageCircle className=\"h-5 w-5 text-purple-500\" />;\n      default: return <Heart className=\"h-5 w-5 text-gray-500\" />;\n    }\n  };\n\n  const getNotificationText = ({ from, type }) => {\n    const username = from?.username || 'Someone';\n    switch (type) {\n      case 'like': return `${username} liked your post`;\n      case 'follow': return `${username} started following you`;\n      case 'comment': return `${username} commented on your post`;\n      case 'message': return `${username} sent you a message`;\n      default: return 'New notification';\n    }\n  };\n\n  const handleNotificationClick = async (notification) => {\n    if (!notification.read) await markAsRead(notification._id);\n\n    if (notification.type === 'follow') {\n      navigate(`/profile/${notification.from?.username}`);\n    } else if (notification.type === 'message') {\n      navigate(`/messages?user=${notification.from?._id}&username=${notification.from?.username}`);\n    } else if (notification.post?._id) {\n      navigate(`/post/${notification.post._id}`);\n    }\n  };\n\n  const formatTimeAgo = (date) => {\n    const now = new Date();\n    const notifDate = new Date(date);\n    const diff = Math.floor((now - notifDate) / 1000);\n\n    if (diff < 60) return 'Just now';\n    if (diff < 3600) return `${Math.floor(diff / 60)}m ago`;\n    if (diff < 86400) return `${Math.floor(diff / 3600)}h ago`;\n    if (diff < 2592000) return `${Math.floor(diff / 86400)}d ago`;\n    return `${Math.floor(diff / 2592000)}mo ago`;\n  };\n\n  if (loading) return (\n    <div className=\"max-w-2xl mx-auto p-4 flex justify-center py-8\">\n      <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"></div>\n    </div>\n  );\n\n  if (!notifications.length) return (\n    <div className=\"max-w-2xl mx-auto p-4 text-center py-12\">\n      <Heart className=\"h-16 w-16 text-gray-300 dark:text-gray-600 mx-auto mb-4\" />\n      <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">No notifications yet</h3>\n      <p className=\"text-gray-600 dark:text-gray-400\">\n        When someone likes your post or follows you, you'll see it here.\n      </p>\n    </div>\n  );\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-4\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-6\">\n        <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Notifications</h1>\n        {unreadCount > 0 && (\n          <Button variant=\"outline\" size=\"sm\" onClick={markAllAsRead}>\n            Mark all as read\n          </Button>\n        )}\n      </div>\n\n      {/* Notifications List */}\n      <div className=\"space-y-2\">\n        {notifications.map(notification => (\n          <div\n            key={notification._id}\n            className={`flex items-start space-x-3 p-4 rounded-lg cursor-pointer transition-colors border-l-4 ${\n              notification.read\n                ? 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 border-l-transparent'\n                : 'bg-blue-50 dark:bg-blue-900/20 hover:bg-blue-100 dark:hover:bg-blue-900/30 border-l-blue-500'\n            }`}\n            onClick={() => handleNotificationClick(notification)}\n          >\n            {/* Icon */}\n            <div className=\"flex-shrink-0 mt-1\">{getNotificationIcon(notification.type)}</div>\n\n            {/* Avatar */}\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-10 h-10 rounded-full overflow-hidden\">\n                <img\n                  src={notification.from?.avatar\n                    ? `http://localhost:5001/${notification.from.avatar}`\n                    : `https://ui-avatars.com/api/?name=${notification.from?.username || 'User'}&background=random`}\n                  alt={notification.from?.username || 'User'}\n                  className=\"w-full h-full object-cover\"\n                />\n              </div>\n            </div>\n\n            {/* Content */}\n            <div className=\"flex-1 min-w-0\">\n              <div className=\"flex items-center space-x-2\">\n                <p className=\"text-sm text-gray-900 dark:text-white\">{getNotificationText(notification)}</p>\n                {!notification.read && <div className=\"w-2 h-2 bg-blue-500 rounded-full flex-shrink-0\"></div>}\n              </div>\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">{formatTimeAgo(notification.createdAt)}</p>\n            </div>\n\n            {/* Post preview */}\n            {notification.post && (\n              <div className=\"flex-shrink-0\">\n                <div className=\"w-12 h-12 rounded-lg overflow-hidden\">\n                  <img\n                    src={notification.post.photo\n                      ? `http://localhost:5001/${notification.post.photo}`\n                      : 'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=600&h=600&fit=crop'}\n                    alt=\"Post\"\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}